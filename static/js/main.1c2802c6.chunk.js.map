{"version":3,"sources":["components/Item.js","components/Total.js","components/Items.js","components/ItemsContainer.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","react_default","a","createElement","className","amount","onClick","decreaseAmount","handleClick","src","alt","title","content","price","total","Total","item","Items","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","id","type","searchResults","increaseAmount","param","e","newAmount","objectSpread","console","log","setState","search","bind","assertThisInitialized","num","event","searchStr","target","value","regexp","RegExp","filter","test","_this2","list","length","listTotal","totalOrder","reduce","b","onChange","htmlFor","map","key","components_Item","components_Total","Component","ItemsContainer","components_Items","App","components_ItemsContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c2802c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.css\";\r\n\r\nconst Item = props => {\r\n  return (\r\n    <div className='card-container hoverable'>\r\n      {props.amount ? (\r\n        <button\r\n          className='btn waves-effect waves-light red hoverable'\r\n          onClick={props.decreaseAmount}\r\n        >\r\n          X\r\n        </button>\r\n      ) : null}\r\n      <div className='card' onClick={props.handleClick}>\r\n        <div className='card-image'>\r\n          <img src={props.src} alt={props.title} />\r\n          <span className='card-title'>{props.title}</span>\r\n        </div>\r\n        <div className='card-content'>\r\n          <p>{props.content}</p>\r\n          <p>\r\n            {props.price} KM{\" \"}\r\n            {props.amount ? (\r\n              <span>\r\n                <span>x {props.amount}</span>\r\n                <span> Total: {props.total} KM </span>\r\n              </span>\r\n            ) : null}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\n\r\nconst Total = props => {\r\n  return (\r\n    <div>\r\n      {props.amount ? (\r\n        <p>\r\n          {props.item}\r\n          <span> x {props.amount}</span>\r\n          <span> = {props.total} KM</span>\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Total;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"./Item\";\r\nimport Total from \"./Total\";\r\nimport \"./items.css\";\r\n\r\nclass Items extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.search = this.search.bind(this);\r\n  }\r\n  state = {\r\n    items: [\r\n      {\r\n        id: 0,\r\n        src: \"./img/coffe.jpg\",\r\n        title: \"Coffe\",\r\n        content: \"Hot Coffe\",\r\n        type: \"Hot Drinks\",\r\n        price: 1.5,\r\n        amount: 0,\r\n        total: 0\r\n      },\r\n      {\r\n        id: 1,\r\n        src: \"./img/tea.jpg\",\r\n        title: \"Tea\",\r\n        content: \"Cup of Tea\",\r\n        type: \"Hot Drinks\",\r\n        price: 2,\r\n        amount: 0,\r\n        total: 0\r\n      },\r\n      {\r\n        id: 2,\r\n        src: \"./img/beer.jpg\",\r\n        title: \"Beer\",\r\n        type: \"Cold Drinks\",\r\n        content: \"Cold Beer\",\r\n        price: 3,\r\n        amount: 0,\r\n        total: 0\r\n      }\r\n    ],\r\n    searchResults: []\r\n  };\r\n  increaseAmount = param => e => {\r\n    let newAmount = { ...this.state };\r\n    newAmount.items[param.id].amount += 1;\r\n    newAmount.items[param.id].total =\r\n      newAmount.items[param.id].amount * newAmount.items[param.id].price;\r\n    console.log(newAmount);\r\n    this.setState({\r\n      ...newAmount\r\n    });\r\n  };\r\n  decreaseAmount = param => e => {\r\n    let newAmount = { ...this.state };\r\n    if (newAmount.items[param.id].amount > 0) {\r\n      newAmount.items[param.id].amount -= 1;\r\n      newAmount.items[param.id].total =\r\n        newAmount.items[param.id].amount * newAmount.items[param.id].price;\r\n      console.log(newAmount);\r\n      this.setState({\r\n        ...newAmount\r\n      });\r\n    }\r\n  };\r\n  getSum(total, num) {\r\n    return total + num;\r\n  }\r\n  search(event) {\r\n    let searchStr = event.target.value;\r\n    const regexp = new RegExp(searchStr, \"i\");\r\n    let searchResults = this.state.items.filter(\r\n      search => regexp.test(search.type) || regexp.test(search.title)\r\n    );\r\n\r\n    this.setState({\r\n      searchResults: searchResults\r\n    });\r\n  }\r\n  render() {\r\n    let list = this.state.items;\r\n\r\n    this.state.searchResults.length\r\n      ? (list = this.state.searchResults)\r\n      : (list = this.state.items);\r\n\r\n    let listTotal = this.state.items;\r\n    const totalOrder = listTotal.reduce((a, b) => ({\r\n      total: a.total + b.total\r\n    }));\r\n    return (\r\n      <div className='row'>\r\n        <div className='input-field container'>\r\n          <input id='search' type='text' onChange={this.search} />\r\n          <label htmlFor='search'>search</label>\r\n        </div>\r\n\r\n        <ul className='collection col s8 m8 l9 xl10'>\r\n          {list.map(list => (\r\n            <li className='collection-item col s12 m6 l3 xl3' key={list.id}>\r\n              <Item\r\n                handleClick={this.increaseAmount(list)}\r\n                decreaseAmount={this.decreaseAmount(list)}\r\n                id={list.id}\r\n                src={list.src}\r\n                title={list.title}\r\n                content={list.content}\r\n                price={list.price}\r\n                amount={list.amount}\r\n                total={list.total}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className='total collection col s4 m4 l3 xl2'>\r\n          <p className='collection-item no-padding-left text-bold'>Order: </p>\r\n          {listTotal.map(listTotal => (\r\n            <Total\r\n              key={listTotal.title}\r\n              item={listTotal.title}\r\n              amount={listTotal.amount}\r\n              total={listTotal.total}\r\n            />\r\n          ))}\r\n          {totalOrder.total ? (\r\n            <p className='collection-item no-padding-left border-top text-bold'>\r\n              Total: {totalOrder.total} KM\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\n","import React from \"react\";\r\nimport Items from \"./Items\";\r\n\r\nconst ItemsContainer = () => {\r\n  return <Items />;\r\n};\r\n\r\nexport default ItemsContainer;\r\n","import React, { Component } from \"react\";\nimport ItemsContainer from \"./components/ItemsContainer\";\nclass App extends Component {\n  render() {\n    return <ItemsContainer />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"materialize-css/dist/css/materialize.css\";\nimport \"materialize-css/dist/js/materialize.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}